{"version":3,"sources":["store/auth/action.js","components/Loading/index.js","components/Form/InputForm.jsx","tools/checkpass.js","Pages/Auth/index.jsx","store/auth/saga.js","store/covi/action.js","services/covid.js","store/covi/saga.js","store/saga.js","store/auth/reducer.js","store/covi/reducer.js","store/store.js","components/Card/CardCov.jsx","components/Loading/loading.js","Pages/Main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["actionAuth","startSignUp","payload","type","signUpSUCCESS","signUpFail","signUp","login","startLogin","loginSuccess","loginFail","Loading","loading","style","height","position","display","className","InputForm","label","placeholder","onChange","value","iconName","condition","Password","size","prefix","name","backgroundColor","margin","checkPassword","password","check","test","length","console","log","Auth","props","match","useState","userName","inputSI","setInputSI","confirmPass","inputSU","setInputSU","showFrom","setShowForm","history","useHistory","useSelector","state","auth","dispatch","useDispatch","signIn","message","error","email","callback","setData","text","target","justify","onClick","watchSigUp","watchSigIn","authSaga","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","delay","ms","Promise","res","setTimeout","put","call","createUserWithEmailAndPassword","success","takeEvery","signInWithEmailAndPassword","push","all","fork","actionFetchCov","fetchData","fetchSuccess","fetchFail","fetchStart","axios","require","fetchDataCov","a","method","url","headers","useQueryString","response","data","Object","values","regions","dataList","index","JSON","stringify","analysis","totalCase","total_cases","totalDeaths","deaths","changeCase","change","flag","iso3166a2","watchFetch","fetchSaga","saga","DEFAULT_STATE","sigUpSuccess","reducerAuth","action","INITIAL_STATE","reducerCov","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","cov","store","createStore","applyMiddleware","run","CardCov","changeDeaths","textH3","information","width","fontWeight","color","transform","alignItems","code","placement","title","LoadingContainer","justifyContent","minHeight","Main","prevScrollpos","window","pageYOffset","visible","scroll","setScroll","useEffect","addEventListener","handleScroll","removeEventListener","currentScrollPos","Search","onSearch","maxWidth","zIndex","top","map","e","i","key","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.cc63da4b.chunk.js","sourcesContent":["//action type\r\nexport const LOGIN = \"LOGIN\";\r\nexport const START_LOGIN = \"START_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAIL = \"SIGN_UP_FAIL\";\r\nexport const START_SIGN_UP = \"START_SIGN_UP\";\r\n\r\n//action\r\nconst login = (payload) => ({ type: LOGIN, payload });\r\nconst startLogin = (payload) => ({ type: START_LOGIN, payload });\r\nconst loginSuccess = (payload) => ({ type: LOGIN_SUCCESS, payload });\r\nconst loginFail = (payload) => ({ type: LOGIN_FAIL, payload });\r\n\r\nconst signUp = (payload) => ({ type: SIGN_UP, payload });\r\nconst startSignUp = (payload) => ({ type: START_SIGN_UP, payload });\r\nconst signUpFail = (payload) => ({ type: SIGN_UP_FAIL, payload });\r\nconst signUpSUCCESS = (payload) => ({ type: SIGN_UP_SUCCESS, payload });\r\n\r\nconst actionAuth = {\r\n  startSignUp,\r\n  signUpSUCCESS,\r\n  signUpFail,\r\n  signUp,\r\n\r\n  login,\r\n  startLogin,\r\n  loginSuccess,\r\n  loginFail,\r\n};\r\n\r\nexport default actionAuth;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Loading = ({ loading }) => {\r\n    return (\r\n        <div style={{ height: 55, position: 'relative', display: 'flex' }}>\r\n            {loading ? <div className=\"loader\">Loading...</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst InputForm = ({ label, placeholder, onChange, value, iconName, type, condition }) => (\r\n    <>\r\n        {type == 'password' ? (\r\n            <>\r\n                <label>{label} </label>\r\n                <Input.Password\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    prefix={<ion-icon name={iconName} />}\r\n                    style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={condition != '' && condition ? 'error' : null}\r\n                />\r\n            </>\r\n        ) : (\r\n            <>\r\n                <label>{label} </label>\r\n                <Input\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    prefix={<ion-icon name={iconName} />}\r\n                    style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={condition ? 'error' : null}\r\n                />\r\n            </>\r\n        )}\r\n    </>\r\n);\r\n\r\nexport default InputForm;\r\n","export const checkPassword = (password) => {\r\n    const check = !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password);\r\n    if (password.length > 7 && check) {\r\n        console.log(!/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password));\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Row, message } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport actionAuth from '../../store/auth/action';\r\n\r\nimport Loading from '../../components/Loading';\r\nimport InputForm from '../../components/Form/InputForm';\r\nimport { checkPassword } from '../../tools/checkpass';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Auth = ({ props, match }) => {\r\n    const [inputSI, setInputSI] = useState({\r\n        userName: '',\r\n        password: '',\r\n    });\r\n    const [inputSU, setInputSU] = useState({\r\n        userName: '',\r\n        password: '',\r\n        confirmPass: '',\r\n    });\r\n    const [showFrom, setShowForm] = useState(true);\r\n    let history = useHistory();\r\n\r\n    // redux\r\n    let loading = useSelector((state) => state.auth.loading);\r\n    let dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        let { userName, password } = inputSI;\r\n\r\n        if (userName === '' || password === '' || checkPassword(password) == false) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: inputSI.userName + '@gmail.com', password, history };\r\n            dispatch(actionAuth.login(payload));\r\n        }\r\n    };\r\n\r\n    const signInForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFormSignIn\">\r\n                <div className=\"maskCover\" />\r\n                <div className=\"content\">\r\n                    <InputForm\r\n                        placeholder=\"Enter User Name\"\r\n                        iconName=\"person-circle-outline\"\r\n                        label=\"Username\"\r\n                        value={inputSI.userName}\r\n                        onChange={(text) => setInputSI({ ...inputSI, userName: text.target.value })}\r\n                    />\r\n                    <InputForm\r\n                        type=\"password\"\r\n                        placeholder=\"Enter Password\"\r\n                        iconName=\"lock-closed-outline\"\r\n                        label=\"Password\"\r\n                        value={inputSI.password}\r\n                        onChange={(text) => setInputSI({ ...inputSI, password: text.target.value })}\r\n                        condition={\r\n                            inputSI.password.length > 0 && checkPassword(inputSI.password) === false\r\n                        }\r\n                    />\r\n                    <Row justify=\"space-between\">\r\n                        <button\r\n                            type=\"button\"\r\n                            className=\"outline\"\r\n                            onClick={() => setShowForm(false)}\r\n                        >\r\n                            Sign up for an account\r\n                        </button>\r\n                        <button className=\"outline\">Forgot password ?</button>\r\n                    </Row>\r\n                    <Loading loading={loading} />\r\n                    <button onClick={signIn} className=\"complete\">\r\n                        Sign In\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const signUp = () => {\r\n        let { userName, password, confirmPass } = inputSU;\r\n\r\n        if (\r\n            userName === '' ||\r\n            password === '' ||\r\n            checkPassword(password) == false ||\r\n            confirmPass !== password\r\n        ) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: userName + '@gmail.com', password, callback: setData };\r\n            dispatch(actionAuth.signUp(payload));\r\n        }\r\n    };\r\n\r\n    const setData = () => {\r\n        //change => sign in form\r\n        setInputSI({ ...inputSI, userName: inputSU.userName });\r\n        setInputSU({ ...inputSU, password: '', confirmPass: '' });\r\n        setShowForm(true);\r\n    };\r\n\r\n    const signUpForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFomSignUp\">\r\n                <InputForm\r\n                    placeholder=\"Enter User Name\"\r\n                    iconName=\"person-circle-outline\"\r\n                    label=\"Username\"\r\n                    value={inputSU.userName}\r\n                    onChange={(text) => setInputSU({ ...inputSU, userName: text.target.value })}\r\n                />\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    iconName=\"lock-closed-outline\"\r\n                    label=\"Password\"\r\n                    value={inputSU.password}\r\n                    onChange={(text) => setInputSU({ ...inputSU, password: text.target.value })}\r\n                    condition={\r\n                        inputSU.password.length > 0 && checkPassword(inputSU.password) === false\r\n                    }\r\n                />\r\n\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    iconName=\"lock-open-outline\"\r\n                    label=\"Confirm password\"\r\n                    value={inputSU.confirmPass}\r\n                    onChange={(text) => setInputSU({ ...inputSU, confirmPass: text.target.value })}\r\n                    condition={\r\n                        inputSU.confirmPass.length > 0 && inputSU.password !== inputSU.confirmPass\r\n                    }\r\n                />\r\n                <Row justify=\"space-between\">\r\n                    <button className=\"outline\" onClick={() => setShowForm(true)}>\r\n                        Already have an account\r\n                    </button>\r\n                </Row>\r\n                <Loading loading={loading} />\r\n                <button className=\"complete\" onClick={signUp}>\r\n                    Sign Up\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={'background'}>\r\n            <div className=\"maskCover\" />\r\n\r\n            {showFrom ? signInForm() : signUpForm()}\r\n        </div>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {};\r\n\r\nexport default Auth;\r\n","import { put, takeEvery, fork, all, call } from 'redux-saga/effects';\r\nimport actionAuth, { SIGN_UP, LOGIN } from './action';\r\n\r\nimport firebase from 'firebase';\r\nimport { message } from 'antd';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: 'AIzaSyCOwN9vJ1mjrod0vXlnQZ_flrHmkByhNAI',\r\n    authDomain: 'selloapp-eb391.firebaseapp.com',\r\n    databaseURL: 'https://selloapp-eb391.firebaseio.com',\r\n    projectId: 'selloapp-eb391',\r\n    storageBucket: 'selloapp-eb391.appspot.com',\r\n    messagingSenderId: '408740375125',\r\n    appId: '1:408740375125:web:c1c23492b4fb04e19242dc',\r\n    measurementId: 'G-646ZEF137L',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst delay = (ms) =>\r\n    new Promise((res) => {\r\n        console.log('=====delay====', ms);\r\n        setTimeout(res, ms);\r\n    });\r\n\r\nfunction* signUp({ payload }) {\r\n    try {\r\n        let { email, password, callback } = payload;\r\n\r\n        yield put(actionAuth.startSignUp());\r\n        yield delay(3000);\r\n\r\n        let auth = firebase.auth();\r\n        yield call([auth, auth.createUserWithEmailAndPassword], email, password);\r\n        yield put(actionAuth.signUpSUCCESS());\r\n        callback();\r\n\r\n        message.success('Successful registration,please login to use the service');\r\n        console.log('===SAGA=====SIGN_UP_SUCCESS======');\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_UP_FAIL======');\r\n        console.log(error.message);\r\n        yield put(actionAuth.signUpFail(error.message));\r\n        message.error(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchSigUp() {\r\n    yield takeEvery(SIGN_UP, signUp);\r\n}\r\n//=========================================\r\n\r\nfunction* signIn({ payload }) {\r\n    try {\r\n        let { email, password, history } = payload;\r\n\r\n        yield put(actionAuth.startLogin());\r\n        yield delay(3000); //test loading at components\r\n\r\n        let auth = firebase.auth();\r\n\r\n        yield call([auth, auth.signInWithEmailAndPassword], email, password);\r\n\r\n        yield put(actionAuth.loginSuccess());\r\n        yield history.push('./main');\r\n\r\n        console.log('===SAGA=====SIGN_IN_SUCCESS======');\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_IN_FAIL======');\r\n        yield put(actionAuth.signUpFail(error.message));\r\n        console.log(error.message);\r\n        message.error(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchSigIn() {\r\n    yield takeEvery(LOGIN, signIn);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchSigUp), fork(watchSigIn)]);\r\n}\r\n\r\nexport default authSaga;\r\n","//action type\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\nexport const START_FETCH = 'START_FETCH';\r\nexport const FETCH_FAIL = ' FETCH_FAIL';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\n\r\nconst fetchData = (payload) => ({ type: FETCH_DATA, payload });\r\nconst fetchSuccess = (payload) => ({ type: FETCH_SUCCESS, payload });\r\nconst fetchFail = (payload) => ({ type: FETCH_FAIL, payload });\r\nconst fetchStart = (payload) => ({ type: START_FETCH, payload });\r\n\r\nconst actionFetchCov = {\r\n    fetchData,\r\n    fetchSuccess,\r\n    fetchFail,\r\n    fetchStart,\r\n};\r\n\r\nexport default actionFetchCov;\r\n","const axios = require('axios');\r\n\r\nexport const fetchDataCov = async () => {\r\n    let response = await axios({\r\n        method: 'GET',\r\n        url: 'https://coronavirus-map.p.rapidapi.com/v1/summary/latest',\r\n        headers: {\r\n            'content-type': 'application/octet-stream',\r\n            'x-rapidapi-host': 'coronavirus-map.p.rapidapi.com',\r\n            'x-rapidapi-key': '9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb',\r\n            useQueryString: true,\r\n        },\r\n    });\r\n\r\n    let data = Object.values(response.data.data.regions);\r\n\r\n    console.log('data', data);\r\n\r\n    let dataList = [];\r\n\r\n    for (let index = 0; index < data.length; index++) {\r\n        let value = JSON.stringify(data[index]);\r\n        console.log(value.name);\r\n\r\n        let item = {\r\n            name: value,\r\n        };\r\n\r\n        dataList.push(analysis(data[index]));\r\n    }\r\n\r\n    console.log('=======dataList===============', Object.values(dataList));\r\n\r\n    return dataList;\r\n};\r\n\r\nconst analysis = (data) => {\r\n    return {\r\n        name: data.name,\r\n        totalCase: data.total_cases,\r\n        totalDeaths: data.deaths,\r\n        changeCase: data.change.total_cases,\r\n        deaths: data.change.deaths,\r\n        flag: data.iso3166a2,\r\n    };\r\n};\r\n\r\n//URL Shortener Service\r\n\r\n// axios({\r\n//   method: \"POST\",\r\n//   url: \"https://url-shortener-service.p.rapidapi.com/shorten\",\r\n//   headers: {\r\n//     \"content-type\": \"application/x-www-form-urlencoded\",\r\n//     \"x-rapidapi-host\": \"url-shortener-service.p.rapidapi.com\",\r\n//     \"x-rapidapi-key\": \"9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb\",\r\n//     useQueryString: true,\r\n//   },\r\n//   data: {\r\n//     url: \"https://search.muz.li/MzQ2ZmI3NWQ2\",\r\n//   },\r\n// })\r\n//   .then((response) => {\r\n//     console.log(response);\r\n//   })\r\n//   .catch((error) => {\r\n//     console.log(error);\r\n//   });\r\n","import { put, takeEvery, fork } from 'redux-saga/effects';\r\nimport actionFetchCov, { FETCH_DATA } from './action';\r\nimport Axios from 'axios';\r\nimport { fetchDataCov } from '../../services/covid';\r\n\r\nfunction* fetchData() {\r\n    try {\r\n        yield put(actionFetchCov.fetchStart());\r\n\r\n        let response = yield fetchDataCov();\r\n        // console.log('===SAGA=====response======', response);\r\n\r\n        yield put(actionFetchCov.fetchSuccess(response));\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_UP_FAIL======');\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchFetch() {\r\n    yield takeEvery(FETCH_DATA, fetchData);\r\n}\r\n\r\nexport default function* fetchSaga() {\r\n    yield fork(watchFetch);\r\n}\r\n","import { fork, all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport fetchSaga from './covi/saga';\r\n\r\nfunction* saga() {\r\n    yield fork(authSaga);\r\n    yield fork(fetchSaga);\r\n}\r\n\r\nexport default saga;\r\n","import {\r\n  START_LOGIN,\r\n  START_SIGN_UP,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from './action';\r\n\r\nconst DEFAULT_STATE = {\r\n  loading: false,\r\n  sigUpSuccess: false,\r\n};\r\n\r\nconst reducerAuth = (state = DEFAULT_STATE, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case START_SIGN_UP:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        sigUpSuccess: true,\r\n      };\r\n    case SIGN_UP_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    //=====================\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case START_LOGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import { FETCH_DATA, FETCH_FAIL, FETCH_SUCCESS, START_FETCH } from './action';\r\n\r\nconst INITIAL_STATE = {\r\n    loading: false,\r\n    data: null,\r\n};\r\n\r\nconst reducerCov = (state = INITIAL_STATE, action) => {\r\n    const { payload, type } = action;\r\n    switch (type) {\r\n        case FETCH_DATA:\r\n            return state;\r\n        case START_FETCH:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        case FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducerCov;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport saga from './saga';\r\nimport reducerAuth from './auth/reducer';\r\nimport reducerCov from './covi/reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: reducerAuth,\r\n    cov: reducerCov,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","import React from 'react';\r\n\r\nimport './CardCovi.scss';\r\nimport Flag from 'react-world-flags';\r\nimport { Tooltip, message } from 'antd';\r\n\r\nconst CardCov = ({\r\n    flag,\r\n    totalCase,\r\n    totalDeaths,\r\n    changeCase,\r\n    changeDeaths,\r\n    name,\r\n    style,\r\n    backgroundColor,\r\n    information,\r\n}) => {\r\n    const followNation = () => {\r\n        message.success('Added to watch list');\r\n    };\r\n\r\n    const textH3 = (text, width) => (\r\n        <h3\r\n            style={{\r\n                width: width ? width : '15%',\r\n                fontWeight: style ? 'bold' : 500,\r\n                color: backgroundColor === '#fff' ? 'black' : 'white',\r\n            }}\r\n        >\r\n            {text}\r\n        </h3>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            className={`CardCov `}\r\n            style={{\r\n                transform: style ? 'none' : null,\r\n                backgroundColor: backgroundColor,\r\n            }}\r\n        >\r\n            <div\r\n                style={{\r\n                    width: '35%',\r\n                    display: 'flex',\r\n                    margin: 0,\r\n                    height: '100%',\r\n                    alignItems: 'center',\r\n                }}\r\n            >\r\n                <Flag code={flag} width=\"40px\" height=\"30px\" />\r\n                <h3\r\n                    style={{\r\n                        fontWeight: 'bold',\r\n                        color: backgroundColor === '#fff' ? 'black' : 'white',\r\n                    }}\r\n                >\r\n                    {name}\r\n                </h3>\r\n            </div>\r\n\r\n            {textH3(totalCase)}\r\n            {textH3(totalDeaths)}\r\n            {textH3(changeCase)}\r\n            {textH3(changeDeaths)}\r\n\r\n            <div style={{ width: '5%' }}>\r\n                {style ? null : (\r\n                    <Tooltip placement=\"topRight\" title={'Follow nation'}>\r\n                        <button onClick={followNation}>\r\n                            <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                        </button>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CardCov;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './loading.css';\r\n\r\nconst LoadingContainer = (props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                minHeight: 300,\r\n            }}\r\n        >\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingContainer.propTypes = {};\r\n\r\nexport default LoadingContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Table, Input } from 'antd';\r\n\r\nimport './style.scss';\r\nimport Loading from '../../components/Loading';\r\nimport actionFetchCov from '../../store/covi/action';\r\nimport Flag from 'react-world-flags';\r\nimport CardCov from '../../components/Card/CardCov';\r\nimport LoadingContainer from '../../components/Loading/loading';\r\n\r\nconst Main = (props) => {\r\n    //redux\r\n    let dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.cov.loading);\r\n    const data = useSelector((state) => state.cov.data);\r\n\r\n    //state\r\n    const [scroll, setScroll] = useState({\r\n        prevScrollpos: window.pageYOffset,\r\n        visible: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n        dispatch(actionFetchCov.fetchData());\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    const handleScroll = () => {\r\n        const { prevScrollpos } = scroll;\r\n\r\n        const currentScrollPos = window.pageYOffset;\r\n        const visible = prevScrollpos > currentScrollPos ? true : false;\r\n\r\n        setScroll({\r\n            prevScrollpos: currentScrollPos,\r\n            visible,\r\n        });\r\n    };\r\n\r\n    const onClick = async () => {\r\n        dispatch(actionFetchCov.fetchStart());\r\n        dispatch(actionFetchCov.fetchData());\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <header>\r\n                <Input.Search\r\n                    placeholder=\"Search nation\"\r\n                    onSearch={(value) => console.log(value)}\r\n                    style={{ maxWidth: 1140, height: 50, margin: 'auto auto', color: '#000' }}\r\n                />\r\n            </header>\r\n            {200 - scroll.prevScrollpos > 0 ? null : (\r\n                <div\r\n                    style={{\r\n                        position: 'fixed',\r\n                        width: '100%',\r\n                        zIndex: 1,\r\n                        top: 0,\r\n                        // height header - scroll.prevScrollpos\r\n                    }}\r\n                >\r\n                    <div className=\"container\">\r\n                        <CardCov\r\n                            name={'Nation'}\r\n                            changeCase={'Change case'}\r\n                            totalCase={'Total Case'}\r\n                            totalDeaths={'Total Deaths'}\r\n                            changeDeaths={'Change Deaths'}\r\n                            style=\"noneHove\"\r\n                            backgroundColor={200 - scroll.prevScrollpos <= 0 ? '#7db5ad' : '#fff'}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {loading ? <LoadingContainer /> : null}\r\n\r\n            {data && data.length > 0 ? (\r\n                <div className=\"container\">\r\n                    <div className=\"wrapCard\">\r\n                        <CardCov\r\n                            name={'Nation'}\r\n                            changeCase={'Change case'}\r\n                            totalCase={'Total Case'}\r\n                            totalDeaths={'Total Deaths'}\r\n                            changeDeaths={'Change Deaths'}\r\n                            style=\"noneHove\"\r\n                            backgroundColor={200 - scroll.prevScrollpos <= 0 ? '#cfcfcf' : '#fff'}\r\n                        />\r\n\r\n                        {data\r\n                            ? data.map((e, i) => (\r\n                                  <CardCov\r\n                                      key={i}\r\n                                      name={e.name}\r\n                                      changeCase={e.changeCase}\r\n                                      totalCase={e.totalCase}\r\n                                      totalDeaths={e.totalDeaths}\r\n                                      changeDeaths={e.deaths}\r\n                                      flag={e.flag}\r\n                                      backgroundColor=\"#fff\"\r\n                                  />\r\n                              ))\r\n                            : null}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","import React from 'react';\n\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport Auth from './Pages/Auth';\nimport store from './store/store';\nimport Main from './Pages/Main';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div>\n                    <Switch>\n                        <Route path=\"/\" exact component={Auth} />\n                        <Route path=\"/main\" component={Main} />\n                    </Switch>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}