{"version":3,"sources":["store/auth/action.js","components/Loading/index.js","components/Form/InputForm.jsx","tools/checkpass.js","Pages/Auth/index.jsx","store/auth/saga.js","store/Covid/action.js","services/covid.js","store/Covid/saga.js","store/saga.js","store/auth/reducer.js","store/Covid/reducer.js","store/store.js","Pages/Main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["actionAuth","startSignUp","payload","type","signUpSUCCESS","signUpFail","signUp","login","startLogin","loginSuccess","loginFail","Loading","loading","style","height","position","display","class","InputForm","label","placeholder","onChange","value","iconName","condition","Password","size","prefix","name","backgroundColor","margin","className","checkPassword","password","check","test","length","console","log","Auth","props","match","useState","userName","inputSI","setInputSI","confirmPass","inputSU","setInputSU","showFrom","setShowForm","useSelector","state","auth","dispatch","useDispatch","signIn","message","error","email","callback","setData","text","target","justify","onClick","watchSigUp","watchSigIn","authSaga","delay","ms","Promise","res","setTimeout","put","firebase","call","createUserWithEmailAndPassword","success","takeEvery","history","signInWithEmailAndPassword","push","all","fork","actionCovid","fetchData","startFetch","fetchSuccess","fetchFail","axios","require","a","method","url","headers","useQueryString","response","data","Object","values","regions","fetchCovid","watchFetchCovid","covidSaga","takeLatest","saga","DEFAULT_STATE","sigUpSuccess","reducerAuth","action","INITIAL_STATE","listData","reducerCovid","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","covid","store","createStore","applyMiddleware","run","Main","useEffect","App","path","exact","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.e1e5fa2e.chunk.js","sourcesContent":["//action type\r\nexport const LOGIN = \"LOGIN\";\r\nexport const START_LOGIN = \"START_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAIL = \"SIGN_UP_FAIL\";\r\nexport const START_SIGN_UP = \"START_SIGN_UP\";\r\n\r\n//action\r\nconst login = (payload) => ({ type: LOGIN, payload });\r\nconst startLogin = (payload) => ({ type: START_LOGIN, payload });\r\nconst loginSuccess = (payload) => ({ type: LOGIN_SUCCESS, payload });\r\nconst loginFail = (payload) => ({ type: LOGIN_FAIL, payload });\r\n\r\nconst signUp = (payload) => ({ type: SIGN_UP, payload });\r\nconst startSignUp = (payload) => ({ type: START_SIGN_UP, payload });\r\nconst signUpFail = (payload) => ({ type: SIGN_UP_FAIL, payload });\r\nconst signUpSUCCESS = (payload) => ({ type: SIGN_UP_SUCCESS, payload });\r\n\r\nconst actionAuth = {\r\n  startSignUp,\r\n  signUpSUCCESS,\r\n  signUpFail,\r\n  signUp,\r\n\r\n  login,\r\n  startLogin,\r\n  loginSuccess,\r\n  loginFail,\r\n};\r\n\r\nexport default actionAuth;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Loading = ({ loading }) => {\r\n    return (\r\n        <div style={{ height: 55, position: 'relative', display: 'flex' }}>\r\n            {loading ? <div class=\"loader\">Loading...</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst InputForm = ({ label, placeholder, onChange, value, iconName, type, condition }) => (\r\n  <>\r\n    {type === 'password' ? (\r\n      <>\r\n        <label>{label} </label>\r\n        <Input.Password\r\n          size=\"large\"\r\n          placeholder={placeholder}\r\n          prefix={<ion-icon name={iconName} />}\r\n          style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n          value={value}\r\n          onChange={onChange}\r\n          className={condition != '' && condition ? 'error' : null}\r\n        />\r\n      </>\r\n    ) : (\r\n      <>\r\n        <label>{label} </label>\r\n        <Input\r\n          size=\"large\"\r\n          placeholder={placeholder}\r\n          prefix={<ion-icon name={iconName} />}\r\n          style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n          value={value}\r\n          onChange={onChange}\r\n          className={condition ? 'error' : null}\r\n        />\r\n      </>\r\n    )}\r\n  </>\r\n);\r\n\r\nexport default InputForm;\r\n","export const checkPassword = (password) => {\r\n    const check = !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password);\r\n    if (password.length > 7 && check) {\r\n        console.log(!/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password));\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Row, message } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport actionAuth from '../../store/auth/action';\r\n\r\nimport Loading from '../../components/Loading';\r\nimport InputForm from '../../components/Form/InputForm';\r\nimport { checkPassword } from '../../tools/checkpass';\r\n\r\nconst Auth = ({ props, match }) => {\r\n    const [inputSI, setInputSI] = useState({\r\n        userName: '',\r\n        password: '',\r\n    });\r\n    const [inputSU, setInputSU] = useState({\r\n        userName: '',\r\n        password: '',\r\n        confirmPass: '',\r\n    });\r\n    const [showFrom, setShowForm] = useState(true);\r\n\r\n    // redux\r\n    let loading = useSelector((state) => state.auth.loading);\r\n    let dispatch = useDispatch();\r\n\r\n    const signIn = () => {\r\n        let { userName, password } = inputSI;\r\n\r\n        if (userName == '' || password == '' || checkPassword(password) == false) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: inputSI.userName + '@gmail.com', password };\r\n            dispatch(actionAuth.login(payload));\r\n        }\r\n    };\r\n\r\n    const signInForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFormSignIn\">\r\n                <InputForm\r\n                    placeholder=\"Enter User Name\"\r\n                    iconName=\"person-circle-outline\"\r\n                    label=\"Username\"\r\n                    value={inputSI.userName}\r\n                    onChange={(text) => setInputSI({ ...inputSI, userName: text.target.value })}\r\n                />\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    iconName=\"lock-closed-outline\"\r\n                    label=\"Password\"\r\n                    value={inputSI.password}\r\n                    onChange={(text) => setInputSI({ ...inputSI, password: text.target.value })}\r\n                    condition={\r\n                        inputSI.password.length > 0 && checkPassword(inputSI.password) == false\r\n                    }\r\n                />\r\n                <Row justify=\"space-between\">\r\n                    <button type=\"button\" className=\"outline\" onClick={() => setShowForm(false)}>\r\n                        Sign up for an account\r\n                    </button>\r\n                    <button className=\"outline\">Forgot password ?</button>\r\n                </Row>\r\n                <Loading loading={loading} />\r\n                <button onClick={signIn} className=\"complete\">\r\n                    Sign In\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const signUp = () => {\r\n        let { userName, password, confirmPass } = inputSU;\r\n\r\n        if (\r\n            userName == '' ||\r\n            password == '' ||\r\n            checkPassword(password) == false ||\r\n            confirmPass !== password\r\n        ) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: userName + '@gmail.com', password, callback: setData };\r\n            dispatch(actionAuth.signUp(payload));\r\n        }\r\n    };\r\n\r\n    const setData = () => {\r\n        //change => sign in form\r\n        setInputSI({ ...inputSI, userName: inputSU.userName });\r\n        setInputSU({ ...inputSU, password: '', confirmPass: '' });\r\n        setShowForm(true);\r\n    };\r\n\r\n    const signUpForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFomSignUp\">\r\n                <InputForm\r\n                    placeholder=\"Enter User Name\"\r\n                    iconName=\"person-circle-outline\"\r\n                    label=\"Username\"\r\n                    value={inputSU.userName}\r\n                    onChange={(text) => setInputSU({ ...inputSU, userName: text.target.value })}\r\n                />\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    iconName=\"lock-closed-outline\"\r\n                    label=\"Password\"\r\n                    value={inputSU.password}\r\n                    onChange={(text) => setInputSU({ ...inputSU, password: text.target.value })}\r\n                    condition={\r\n                        inputSU.password.length > 0 && checkPassword(inputSU.password) == false\r\n                    }\r\n                />\r\n\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    iconName=\"lock-open-outline\"\r\n                    label=\"Confirm password\"\r\n                    value={inputSU.confirmPass}\r\n                    onChange={(text) => setInputSU({ ...inputSU, confirmPass: text.target.value })}\r\n                    condition={\r\n                        inputSU.confirmPass.length > 0 && inputSU.password !== inputSU.confirmPass\r\n                    }\r\n                />\r\n                <Row justify=\"space-between\">\r\n                    <button className=\"outline\" onClick={() => setShowForm(true)}>\r\n                        Already have an account\r\n                    </button>\r\n                </Row>\r\n                <Loading loading={loading} />\r\n                <button className=\"complete\" onClick={signUp}>\r\n                    Sign Up\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={'background'}>\r\n            <div className=\"maskCover\" />\r\n\r\n            {showFrom ? signInForm() : signUpForm()}\r\n        </div>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {};\r\n\r\nexport default Auth;\r\n","import { put, takeEvery, fork, all, call } from 'redux-saga/effects';\r\nimport actionAuth, { SIGN_UP, LOGIN } from './action';\r\n\r\nimport firebase from 'firebase';\r\nimport { message } from 'antd';\r\n\r\nconst delay = (ms) =>\r\n  new Promise((res) => {\r\n    console.log('=====delay====', ms);\r\n    setTimeout(res, ms);\r\n  });\r\n\r\nfunction* signUp({ payload }) {\r\n  try {\r\n    let { email, password, callback } = payload;\r\n\r\n    yield put(actionAuth.startSignUp());\r\n    yield delay(3000);\r\n\r\n    let auth = firebase.auth();\r\n    yield call([auth, auth.createUserWithEmailAndPassword], email, password);\r\n    yield put(actionAuth.signUpSUCCESS());\r\n    callback();\r\n\r\n    message.success('Successful registration,please login to use the service');\r\n    console.log('===SAGA=====SIGN_UP_SUCCESS======');\r\n  } catch (error) {\r\n    console.log('===SAGA=====SIGN_UP_FAIL======');\r\n    console.log(error.message);\r\n    yield put(actionAuth.signUpFail(error.message));\r\n    message.error(error.message);\r\n  }\r\n}\r\n\r\nfunction* watchSigUp() {\r\n  yield takeEvery(SIGN_UP, signUp);\r\n}\r\n//=========================================\r\n\r\nfunction* signIn({ payload }) {\r\n  try {\r\n    let { email, password, history } = payload;\r\n\r\n    yield put(actionAuth.startLogin());\r\n    yield delay(3000); //test loading at components\r\n\r\n    let auth = firebase.auth();\r\n\r\n    yield call([auth, auth.signInWithEmailAndPassword], email, password);\r\n\r\n    yield put(actionAuth.loginSuccess());\r\n    yield history.push('./main');\r\n\r\n    console.log('===SAGA=====SIGN_IN_SUCCESS======');\r\n  } catch (error) {\r\n    console.log('===SAGA=====SIGN_IN_FAIL======');\r\n    yield put(actionAuth.signUpFail(error.message));\r\n    console.log(error.message);\r\n    message.error(error.message);\r\n  }\r\n}\r\n\r\nfunction* watchSigIn() {\r\n  yield takeEvery(LOGIN, signIn);\r\n}\r\n\r\nfunction* authSaga() {\r\n  yield all([fork(watchSigUp), fork(watchSigIn)]);\r\n}\r\n\r\nexport default authSaga;\r\n","//action type\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\nexport const START_FETCH = 'START_FETCH';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\nexport const FETCH_FAIL = 'FAIL_SUCCESS';\r\n\r\nconst fetchData = (payload) => ({ type: FETCH_DATA, payload });\r\nconst startFetch = (payload) => ({ type: START_FETCH, payload });\r\nconst fetchSuccess = (payload) => ({ type: FETCH_SUCCESS, payload });\r\nconst fetchFail = (payload) => ({ type: FETCH_FAIL, payload });\r\n\r\nconst actionCovid = {\r\n    fetchData,\r\n    startFetch,\r\n    fetchSuccess,\r\n    fetchFail,\r\n};\r\n\r\nexport default actionCovid;\r\n","const axios = require('axios');\r\n\r\nexport const fetchData = async () => {\r\n  let response = await axios({\r\n    method: 'GET',\r\n    url: 'https://coronavirus-map.p.rapidapi.com/v1/summary/latest',\r\n    headers: {\r\n      'content-type': 'application/octet-stream',\r\n      'x-rapidapi-host': 'coronavirus-map.p.rapidapi.com',\r\n      'x-rapidapi-key': '9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb',\r\n      useQueryString: true,\r\n    },\r\n  });\r\n\r\n  let data = Object.values(response.data.data.regions);\r\n\r\n  return data;\r\n};\r\n// (new Promise() = (resole, reject) => {\r\n//   let data = axios({\r\n//     method: 'GET',\r\n//     url: 'https://coronavirus-map.p.rapidapi.com/v1/summary/latest',\r\n//     headers: {\r\n//       'content-type': 'application/octet-stream',\r\n//       'x-rapidapi-host': 'coronavirus-map.p.rapidapi.com',\r\n//       'x-rapidapi-key': '9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb',\r\n//       useQueryString: true,\r\n//     },\r\n//   });\r\n//   reject(data);\r\n\r\n// });\r\n\r\n// .then((response) => {\r\n//   console.log(response);\r\n//   let data = [...Object.values(response.data.data.regions)];\r\n\r\n//   console.log('==============data================');\r\n//   console.log(response.data.data.regions);\r\n//   console.log(data[0]);\r\n// })\r\n// .catch((error) => {\r\n//   console.log(error);\r\n// });\r\n//URL Shortener Service\r\n\r\n// axios({\r\n//   method: \"POST\",\r\n//   url: \"https://url-shortener-service.p.rapidapi.com/shorten\",\r\n//   headers: {\r\n//     \"content-type\": \"application/x-www-form-urlencoded\",\r\n//     \"x-rapidapi-host\": \"url-shortener-service.p.rapidapi.com\",\r\n//     \"x-rapidapi-key\": \"9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb\",\r\n//     useQueryString: true,\r\n//   },\r\n//   data: {\r\n//     url: \"https://search.muz.li/MzQ2ZmI3NWQ2\",\r\n//   },\r\n// })\r\n//   .then((response) => {\r\n//     console.log(response);\r\n//   })\r\n//   .catch((error) => {\r\n//     console.log(error);\r\n//   });\r\n","import { all, fork, put, takeEvery, takeLatest } from 'redux-saga/effects';\r\nimport actionCovid, { FETCH_DATA } from './action';\r\nimport { message } from 'antd';\r\nimport { fetchData } from '../../services/covid';\r\n\r\nfunction* fetchCovid(payload) {\r\n    try {\r\n        console.log('=====SAGA=====FETCH======');\r\n        yield put(actionCovid.startFetch());\r\n\r\n        const data = yield fetchData();\r\n        console.log(data);\r\n        yield put(actionCovid.fetchSuccess(data));\r\n        console.log('==============SUCCESS========');\r\n    } catch (error) {\r\n        console.log('==============FAIL========');\r\n        yield put(actionCovid.fetchFail(error.message));\r\n        message.error(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchFetchCovid() {\r\n    takeLatest(FETCH_DATA, fetchCovid);\r\n}\r\n\r\nfunction* covidSaga() {\r\n    all([fork(watchFetchCovid)]);\r\n}\r\n\r\nexport default covidSaga;\r\n","import { fork, all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport covidSaga from './Covid/saga';\r\n\r\nfunction* saga() {\r\n    yield all([fork(authSaga)]);\r\n    yield all([fork(covidSaga)]);\r\n}\r\n\r\nexport default saga;\r\n","import {\r\n  START_LOGIN,\r\n  START_SIGN_UP,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from './action';\r\n\r\nconst DEFAULT_STATE = {\r\n  loading: false,\r\n  sigUpSuccess: false,\r\n};\r\n\r\nconst reducerAuth = (state = DEFAULT_STATE, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case START_SIGN_UP:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        sigUpSuccess: true,\r\n      };\r\n    case SIGN_UP_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    //=====================\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case START_LOGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import { FETCH_FAIL, FETCH_SUCCESS, START_FETCH } from './action';\r\n\r\nconst INITIAL_STATE = {\r\n    listData: [],\r\n    loading: false,\r\n};\r\n\r\nconst reducerCovid = (state = INITIAL_STATE, action) => {\r\n    let { payload, type } = action;\r\n    switch (type) {\r\n        case START_FETCH:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                listData: [...state.listData, payload],\r\n            };\r\n        case FETCH_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducerCovid;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport saga from './saga';\r\nimport reducerAuth from './auth/reducer';\r\nimport reducerCovid from './Covid/reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n  auth: reducerAuth,\r\n  covid: reducerCovid,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport actionCovid from '../../store/Covid/action';\r\n\r\nconst Main = (props) => {\r\n    //redux\r\n    let dispatch = useDispatch();\r\n    let data = useSelector((state) => state.covid.listData);\r\n\r\n    useEffect(() => {\r\n        console.log('==========use effect============');\r\n        console.log(data);\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={() => dispatch(actionCovid.fetchData())}>Fetch </button>\r\n        </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","import React from 'react';\n\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport Auth from './Pages/Auth';\nimport store from './store/store';\nimport Main from './Pages/Main';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div>\n                    <Switch>\n                        <Route path=\"/\" exact component={Auth} />\n                        <Route path=\"/main\" component={Main} />\n                    </Switch>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}