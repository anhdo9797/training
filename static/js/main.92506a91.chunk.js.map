{"version":3,"sources":["store/auth/action.js","components/Loading/index.js","components/Form/InputForm.jsx","tools/checkpass.js","Pages/Auth/index.jsx","store/auth/saga.js","store/covi/action.js","services/covid.js","store/covi/saga.js","store/saga.js","store/auth/reducer.js","store/covi/reducer.js","store/store.js","components/Card/CardCov.jsx","components/Loading/loading.js","Pages/Main/index.jsx","App.js","serviceWorker.js","index.js"],"names":["actionAuth","startSignUp","payload","type","signUpSUCCESS","signUpFail","signUp","login","startLogin","loginSuccess","loginFail","Loading","loading","style","height","position","display","className","InputForm","label","placeholder","onChange","value","iconName","condition","Password","size","prefix","name","backgroundColor","margin","checkPassword","password","check","test","length","console","log","Auth","props","match","useState","userName","inputSI","setInputSI","confirmPass","inputSU","setInputSU","showFrom","setShowForm","history","useHistory","useSelector","state","auth","dispatch","useDispatch","signIn","a","message","error","email","callback","setData","text","target","justify","onClick","watchSigUp","watchSigIn","authSaga","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","delay","ms","Promise","res","setTimeout","put","createUserWithEmailAndPassword","user","success","takeEvery","call","signInWithEmailAndPassword","push","all","fork","actionFetchCov","fetchData","fetchSuccess","fetchFail","fetchStart","axios","require","fetchDataCov","method","url","headers","useQueryString","response","data","Object","values","regions","dataList","index","analysis","sum","summary","totalCase","total_cases","totalDeaths","deaths","changeCase","change","flag","iso3166a2","recovered","changeRecovered","watchFetch","fetchSaga","saga","DEFAULT_STATE","sigUpSuccess","reducerAuth","action","INITIAL_STATE","reducerCov","sagaMiddleware","createSagaMiddleware","rootReducer","combineReducers","cov","store","createStore","applyMiddleware","run","nationStyle","width","alignItems","CardCov","changeDeaths","showCase","getShowCase","hiddenIcon","showModal","textH3","hiddenModal","visible","textSmall","fontWeight","color","fontSize","transform","code","title","placement","prototype","LoadingContainer","justifyContent","minHeight","formatNumber","number","String","replace","Main","total","prevScrollpos","window","pageYOffset","scroll","setScroll","setShowCase","showTotal","setShowTotal","setShowModal","useEffect","addEventListener","handleScroll","removeEventListener","currentScrollPos","Search","onSearch","top","marginBottom","slice","map","e","i","key","bottom","marginLeft","App","path","exact","component","Boolean","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.92506a91.chunk.js","sourcesContent":["//action type\r\nexport const LOGIN = \"LOGIN\";\r\nexport const START_LOGIN = \"START_LOGIN\";\r\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\r\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\r\n\r\nexport const SIGN_UP = \"SIGN_UP\";\r\nexport const SIGN_UP_SUCCESS = \"SIGN_UP_SUCCESS\";\r\nexport const SIGN_UP_FAIL = \"SIGN_UP_FAIL\";\r\nexport const START_SIGN_UP = \"START_SIGN_UP\";\r\n\r\n//action\r\nconst login = (payload) => ({ type: LOGIN, payload });\r\nconst startLogin = (payload) => ({ type: START_LOGIN, payload });\r\nconst loginSuccess = (payload) => ({ type: LOGIN_SUCCESS, payload });\r\nconst loginFail = (payload) => ({ type: LOGIN_FAIL, payload });\r\n\r\nconst signUp = (payload) => ({ type: SIGN_UP, payload });\r\nconst startSignUp = (payload) => ({ type: START_SIGN_UP, payload });\r\nconst signUpFail = (payload) => ({ type: SIGN_UP_FAIL, payload });\r\nconst signUpSUCCESS = (payload) => ({ type: SIGN_UP_SUCCESS, payload });\r\n\r\nconst actionAuth = {\r\n  startSignUp,\r\n  signUpSUCCESS,\r\n  signUpFail,\r\n  signUp,\r\n\r\n  login,\r\n  startLogin,\r\n  loginSuccess,\r\n  loginFail,\r\n};\r\n\r\nexport default actionAuth;\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nconst Loading = ({ loading }) => {\r\n    return (\r\n        <div style={{ height: 55, position: 'relative', display: 'flex' }}>\r\n            {loading ? <div className=\"loader\">Loading...</div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loading;\r\n","import React from 'react';\r\nimport { Input } from 'antd';\r\n\r\nconst InputForm = ({ label, placeholder, onChange, value, iconName, type, condition }) => (\r\n    <>\r\n        {type == 'password' ? (\r\n            <>\r\n                <label>{label} </label>\r\n                <Input.Password\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    prefix={<ion-icon name={iconName} />}\r\n                    style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={condition != '' && condition ? 'error' : null}\r\n                />\r\n            </>\r\n        ) : (\r\n            <>\r\n                <label>{label} </label>\r\n                <Input\r\n                    size=\"large\"\r\n                    placeholder={placeholder}\r\n                    prefix={<ion-icon name={iconName} />}\r\n                    style={{ backgroundColor: 'transparent', margin: '15px 0' }}\r\n                    value={value}\r\n                    onChange={onChange}\r\n                    className={condition ? 'error' : null}\r\n                />\r\n            </>\r\n        )}\r\n    </>\r\n);\r\n\r\nexport default InputForm;\r\n","export const checkPassword = (password) => {\r\n    const check = !/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password);\r\n    if (password.length > 7 && check) {\r\n        console.log(!/[~`!#$%\\^&*+=\\-\\[\\]\\\\';,/{}|\\\\\":<>\\?]/g.test(password));\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n};\r\n","import React, { useState } from 'react';\r\nimport { Row, message } from 'antd';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport './style.scss';\r\nimport actionAuth from '../../store/auth/action';\r\n\r\nimport Loading from '../../components/Loading';\r\nimport InputForm from '../../components/Form/InputForm';\r\nimport { checkPassword } from '../../tools/checkpass';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst Auth = ({ props, match }) => {\r\n    const [inputSI, setInputSI] = useState({\r\n        userName: '',\r\n        password: '',\r\n    });\r\n    const [inputSU, setInputSU] = useState({\r\n        userName: '',\r\n        password: '',\r\n        confirmPass: '',\r\n    });\r\n    const [showFrom, setShowForm] = useState(true);\r\n    let history = useHistory();\r\n\r\n    // redux\r\n    let loading = useSelector((state) => state.auth.loading);\r\n    let dispatch = useDispatch();\r\n\r\n    const signIn = async () => {\r\n        let { userName, password } = inputSI;\r\n\r\n        if (userName === '' || password === '' || checkPassword(password) == false) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: inputSI.userName + '@gmail.com', password, history };\r\n            dispatch(actionAuth.login(payload));\r\n            let email = userName + '@gmail.com';\r\n        }\r\n    };\r\n\r\n    const signInForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFormSignIn\">\r\n                <InputForm\r\n                    placeholder=\"Enter User Name\"\r\n                    iconName=\"person-circle-outline\"\r\n                    label=\"Username\"\r\n                    value={inputSI.userName}\r\n                    onChange={(text) => setInputSI({ ...inputSI, userName: text.target.value })}\r\n                />\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    iconName=\"lock-closed-outline\"\r\n                    label=\"Password\"\r\n                    value={inputSI.password}\r\n                    onChange={(text) => setInputSI({ ...inputSI, password: text.target.value })}\r\n                    condition={\r\n                        inputSI.password.length > 0 && checkPassword(inputSI.password) === false\r\n                    }\r\n                />\r\n                <Row justify=\"space-between\">\r\n                    <button type=\"button\" className=\"outline\" onClick={() => setShowForm(false)}>\r\n                        Sign up for an account\r\n                    </button>\r\n                    <button className=\"outline\">Forgot password ?</button>\r\n                </Row>\r\n                <Loading loading={loading} />\r\n                <button onClick={signIn} className=\"complete\">\r\n                    Sign In\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    const signUp = () => {\r\n        let { userName, password, confirmPass } = inputSU;\r\n\r\n        if (\r\n            userName === '' ||\r\n            password === '' ||\r\n            checkPassword(password) == false ||\r\n            confirmPass !== password\r\n        ) {\r\n            message.error('Please enter the correct information');\r\n        } else {\r\n            let payload = { email: userName + '@gmail.com', password, callback: setData };\r\n            dispatch(actionAuth.signUp(payload));\r\n        }\r\n    };\r\n\r\n    const setData = () => {\r\n        //change => sign in form\r\n        setInputSI({ ...inputSI, userName: inputSU.userName });\r\n        setInputSU({ ...inputSU, password: '', confirmPass: '' });\r\n        setShowForm(true);\r\n    };\r\n\r\n    const signUpForm = () => {\r\n        return (\r\n            <div className=\"formAuth showFomSignUp\">\r\n                <InputForm\r\n                    placeholder=\"Enter User Name\"\r\n                    iconName=\"person-circle-outline\"\r\n                    label=\"Username\"\r\n                    value={inputSU.userName}\r\n                    onChange={(text) => setInputSU({ ...inputSU, userName: text.target.value })}\r\n                />\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Enter Password\"\r\n                    iconName=\"lock-closed-outline\"\r\n                    label=\"Password\"\r\n                    value={inputSU.password}\r\n                    onChange={(text) => setInputSU({ ...inputSU, password: text.target.value })}\r\n                    condition={\r\n                        inputSU.password.length > 0 && checkPassword(inputSU.password) === false\r\n                    }\r\n                />\r\n\r\n                <InputForm\r\n                    type=\"password\"\r\n                    placeholder=\"Confirm password\"\r\n                    iconName=\"lock-open-outline\"\r\n                    label=\"Confirm password\"\r\n                    value={inputSU.confirmPass}\r\n                    onChange={(text) => setInputSU({ ...inputSU, confirmPass: text.target.value })}\r\n                    condition={\r\n                        inputSU.confirmPass.length > 0 && inputSU.password !== inputSU.confirmPass\r\n                    }\r\n                />\r\n                <Row justify=\"space-between\">\r\n                    <button className=\"outline\" onClick={() => setShowForm(true)}>\r\n                        Already have an account\r\n                    </button>\r\n                </Row>\r\n                <Loading loading={loading} />\r\n                <button className=\"complete\" onClick={signUp}>\r\n                    Sign Up\r\n                </button>\r\n            </div>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className={'background'}>\r\n            <div className=\"maskCover\" />\r\n\r\n            {showFrom ? signInForm() : signUpForm()}\r\n        </div>\r\n    );\r\n};\r\n\r\nAuth.propTypes = {};\r\n\r\nexport default Auth;\r\n","import { put, takeEvery, fork, all, call } from 'redux-saga/effects';\r\nimport actionAuth, { SIGN_UP, LOGIN } from './action';\r\n\r\nimport firebase from 'firebase';\r\nimport { message } from 'antd';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: 'AIzaSyCOwN9vJ1mjrod0vXlnQZ_flrHmkByhNAI',\r\n    authDomain: 'selloapp-eb391.firebaseapp.com',\r\n    databaseURL: 'https://selloapp-eb391.firebaseio.com',\r\n    projectId: 'selloapp-eb391',\r\n    storageBucket: 'selloapp-eb391.appspot.com',\r\n    messagingSenderId: '408740375125',\r\n    appId: '1:408740375125:web:c1c23492b4fb04e19242dc',\r\n    measurementId: 'G-646ZEF137L',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst delay = (ms) =>\r\n    new Promise((res) => {\r\n        console.log('=====delay====', ms);\r\n        setTimeout(res, ms);\r\n    });\r\n\r\nfunction* signUp({ payload }) {\r\n    try {\r\n        let { email, password, callback } = payload;\r\n\r\n        yield put(actionAuth.startSignUp());\r\n        yield delay(3000);\r\n\r\n        let auth = firebase.auth();\r\n        const user = yield auth.createUserWithEmailAndPassword(email, password);\r\n        console.log('============user==============');\r\n        console.log(user);\r\n        console.log('====================================');\r\n        // yield call([auth, auth.createUserWithEmailAndPassword], email, password);\r\n        yield put(actionAuth.signUpSUCCESS());\r\n        callback();\r\n\r\n        message.success('Successful registration,please login to use the service');\r\n        console.log('===SAGA=====SIGN_UP_SUCCESS======');\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_UP_FAIL======');\r\n        console.log(error.message);\r\n        yield put(actionAuth.signUpFail(error.message));\r\n        message.error(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchSigUp() {\r\n    yield takeEvery(SIGN_UP, signUp);\r\n}\r\n//=========================================\r\n\r\nfunction* signIn({ payload }) {\r\n    try {\r\n        let { email, password, history } = payload;\r\n\r\n        yield put(actionAuth.startLogin());\r\n        yield delay(3000); //test loading at components\r\n\r\n        let auth = firebase.auth();\r\n        yield call([auth, auth.signInWithEmailAndPassword], email, password);\r\n\r\n        yield put(actionAuth.loginSuccess());\r\n        yield history.push('./main');\r\n\r\n        console.log('===SAGA=====SIGN_IN_SUCCESS======');\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_IN_FAIL======');\r\n        yield put(actionAuth.signUpFail(error.message));\r\n        console.log(error.message);\r\n        message.error(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchSigIn() {\r\n    yield takeEvery(LOGIN, signIn);\r\n}\r\n\r\nfunction* authSaga() {\r\n    yield all([fork(watchSigUp), fork(watchSigIn)]);\r\n}\r\n\r\nexport default authSaga;\r\n","//action type\r\n\r\nexport const FETCH_DATA = 'FETCH_DATA';\r\nexport const START_FETCH = 'START_FETCH';\r\nexport const FETCH_FAIL = ' FETCH_FAIL';\r\nexport const FETCH_SUCCESS = 'FETCH_SUCCESS';\r\n\r\nconst fetchData = (payload) => ({ type: FETCH_DATA, payload });\r\nconst fetchSuccess = (payload) => ({ type: FETCH_SUCCESS, payload });\r\nconst fetchFail = (payload) => ({ type: FETCH_FAIL, payload });\r\nconst fetchStart = (payload) => ({ type: START_FETCH, payload });\r\n\r\nconst actionFetchCov = {\r\n    fetchData,\r\n    fetchSuccess,\r\n    fetchFail,\r\n    fetchStart,\r\n};\r\n\r\nexport default actionFetchCov;\r\n","const axios = require('axios');\r\n\r\nexport const fetchDataCov = async () => {\r\n    let response = await axios({\r\n        method: 'GET',\r\n        url: 'https://coronavirus-map.p.rapidapi.com/v1/summary/latest',\r\n        headers: {\r\n            'content-type': 'application/octet-stream',\r\n            'x-rapidapi-host': 'coronavirus-map.p.rapidapi.com',\r\n            'x-rapidapi-key': '9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb',\r\n            useQueryString: true,\r\n        },\r\n    });\r\n\r\n    let data = Object.values(response.data.data.regions);\r\n    let dataList = [];\r\n    for (let index = 0; index < data.length; index++) {\r\n        dataList.push(analysis(data[index]));\r\n    }\r\n\r\n    let sum = response.data.data.summary;\r\n\r\n    return [...dataList, sum];\r\n};\r\n\r\nconst analysis = (data) => {\r\n    return {\r\n        name: data.name,\r\n        totalCase: data.total_cases,\r\n        totalDeaths: data.deaths,\r\n        changeCase: data.change.total_cases,\r\n        deaths: data.change.deaths,\r\n        flag: data.iso3166a2,\r\n        recovered: data.recovered,\r\n        changeRecovered: data.change.recovered,\r\n    };\r\n};\r\n\r\n//URL Shortener Service\r\n\r\n// axios({\r\n//   method: \"POST\",\r\n//   url: \"https://url-shortener-service.p.rapidapi.com/shorten\",\r\n//   headers: {\r\n//     \"content-type\": \"application/x-www-form-urlencoded\",\r\n//     \"x-rapidapi-host\": \"url-shortener-service.p.rapidapi.com\",\r\n//     \"x-rapidapi-key\": \"9cdf32cfc4mshb3430abf1f75818p138eb1jsnf78f2fd25cbb\",\r\n//     useQueryString: true,\r\n//   },\r\n//   data: {\r\n//     url: \"https://search.muz.li/MzQ2ZmI3NWQ2\",\r\n//   },\r\n// })\r\n//   .then((response) => {\r\n//     console.log(response);\r\n//   })\r\n//   .catch((error) => {\r\n//     console.log(error);\r\n//   });\r\n","import { put, takeEvery, fork } from 'redux-saga/effects';\r\nimport actionFetchCov, { FETCH_DATA } from './action';\r\nimport Axios from 'axios';\r\nimport { fetchDataCov } from '../../services/covid';\r\n\r\nfunction* fetchData() {\r\n    try {\r\n        yield put(actionFetchCov.fetchStart());\r\n\r\n        let response = yield fetchDataCov();\r\n        // console.log('===SAGA=====response======', response);\r\n\r\n        yield put(actionFetchCov.fetchSuccess(response));\r\n    } catch (error) {\r\n        console.log('===SAGA=====SIGN_UP_FAIL======');\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nfunction* watchFetch() {\r\n    yield takeEvery(FETCH_DATA, fetchData);\r\n}\r\n\r\nexport default function* fetchSaga() {\r\n    yield fork(watchFetch);\r\n}\r\n","import { fork, all } from 'redux-saga/effects';\r\nimport authSaga from './auth/saga';\r\nimport fetchSaga from './covi/saga';\r\n\r\nfunction* saga() {\r\n    yield fork(authSaga);\r\n    yield fork(fetchSaga);\r\n}\r\n\r\nexport default saga;\r\n","import {\r\n  START_LOGIN,\r\n  START_SIGN_UP,\r\n  SIGN_UP_SUCCESS,\r\n  SIGN_UP_FAIL,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n} from './action';\r\n\r\nconst DEFAULT_STATE = {\r\n  loading: false,\r\n  sigUpSuccess: false,\r\n};\r\n\r\nconst reducerAuth = (state = DEFAULT_STATE, action) => {\r\n  let { type, payload } = action;\r\n  switch (type) {\r\n    case START_SIGN_UP:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case SIGN_UP_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        sigUpSuccess: true,\r\n      };\r\n    case SIGN_UP_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        error: payload,\r\n      };\r\n    //=====================\r\n    case LOGIN_SUCCESS:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case LOGIN_FAIL:\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    case START_LOGIN:\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducerAuth;\r\n","import { FETCH_DATA, FETCH_FAIL, FETCH_SUCCESS, START_FETCH } from './action';\r\n\r\nconst INITIAL_STATE = {\r\n    loading: false,\r\n    data: null,\r\n};\r\n\r\nconst reducerCov = (state = INITIAL_STATE, action) => {\r\n    const { payload, type } = action;\r\n    switch (type) {\r\n        case FETCH_DATA:\r\n            return state;\r\n        case START_FETCH:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n            };\r\n        case FETCH_FAIL:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n            };\r\n        case FETCH_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                data: payload,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducerCov;\r\n","import { combineReducers, createStore, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\n\r\nimport saga from './saga';\r\nimport reducerAuth from './auth/reducer';\r\nimport reducerCov from './covi/reducer';\r\n\r\nconst sagaMiddleware = createSagaMiddleware();\r\n\r\nconst rootReducer = combineReducers({\r\n    auth: reducerAuth,\r\n    cov: reducerCov,\r\n});\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(sagaMiddleware));\r\n\r\nsagaMiddleware.run(saga);\r\n\r\nexport default store;\r\n","import React, { useState } from 'react';\r\n\r\nimport './CardCovi.scss';\r\nimport Flag from 'react-world-flags';\r\nimport { Tooltip, message, Button } from 'antd';\r\nimport Modal from 'antd/lib/modal/Modal';\r\n\r\nconst nationStyle = {\r\n    width: '35%',\r\n    display: 'flex',\r\n    margin: 0,\r\n    height: '100%',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst CardCov = ({\r\n    flag,\r\n    totalCase,\r\n    totalDeaths,\r\n    changeCase,\r\n    changeDeaths,\r\n    name,\r\n    style,\r\n    backgroundColor,\r\n    recovered,\r\n    changeRecovered,\r\n    showCase,\r\n    getShowCase,\r\n    hiddenIcon,\r\n    showModal,\r\n    hiddenModal,\r\n    visible,\r\n}) => {\r\n    const followNation = () => {\r\n        message.success('Added to watch list');\r\n        // setVisible(false);\r\n    };\r\n\r\n    const textH3 = (text, textSmall, change) => (\r\n        <h3\r\n            style={{\r\n                width: '15%',\r\n                fontWeight: style ? 'bold' : 500,\r\n                color: backgroundColor === '#fff' ? 'black' : 'white',\r\n            }}\r\n        >\r\n            {text}\r\n            {showCase && textSmall ? (\r\n                <span style={{ color: change ? 'blue' : 'red', fontSize: 12 }}>\r\n                    <ion-icon name=\"arrow-up-outline\" />\r\n                    {textSmall}\r\n                </span>\r\n            ) : null}\r\n        </h3>\r\n    );\r\n\r\n    const buttonShowCase = () => (\r\n        <Tooltip title={showCase ? 'Hidden case today' : 'Show case today'} placement=\"bottom\">\r\n            <button\r\n                onClick={getShowCase}\r\n                style={{ color: backgroundColor === '#fff' ? 'black' : 'white' }}\r\n            >\r\n                {showCase ? <ion-icon name=\"eye-outline\" /> : <ion-icon name=\"eye-off-outline\" />}\r\n            </button>\r\n        </Tooltip>\r\n    );\r\n\r\n    const wrapNation = () => (\r\n        <div style={nationStyle} className=\"nation\">\r\n            <Flag code={flag} width=\"40px\" height=\"30px\" />\r\n            <h3\r\n                style={{\r\n                    fontWeight: 'bold',\r\n                    color: backgroundColor === '#fff' ? 'black' : 'white',\r\n                }}\r\n            >\r\n                {name}\r\n            </h3>\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div\r\n            onClick={showModal}\r\n            className=\"CardCov\"\r\n            style={{\r\n                transform: style ? 'none' : null,\r\n                backgroundColor: backgroundColor,\r\n            }}\r\n        >\r\n            {wrapNation()}\r\n            {textH3(totalCase, changeCase)}\r\n            {textH3(totalDeaths, changeDeaths)}\r\n            {textH3(recovered, changeRecovered, 'change')}\r\n\r\n            <div style={{ width: '5%' }}>\r\n                {hiddenIcon ? null : style ? (\r\n                    buttonShowCase()\r\n                ) : (\r\n                    <Tooltip placement=\"topRight\" title={'Follow nation'}>\r\n                        <button onClick={followNation}>\r\n                            <ion-icon name=\"add-circle-outline\"></ion-icon>\r\n                        </button>\r\n                    </Tooltip>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nCardCov.prototype = {};\r\n\r\nexport default CardCov;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './loading.css';\r\n\r\nconst LoadingContainer = (props) => {\r\n    return (\r\n        <div\r\n            style={{\r\n                width: '100%',\r\n                display: 'flex',\r\n                justifyContent: 'center',\r\n                alignItems: 'center',\r\n                minHeight: 300,\r\n            }}\r\n        >\r\n            <div className=\"lds-ring\">\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n                <div></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingContainer.propTypes = {};\r\n\r\nexport default LoadingContainer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Modal, Input } from 'antd';\r\n\r\nimport './style.scss';\r\nimport Loading from '../../components/Loading';\r\nimport actionFetchCov from '../../store/covi/action';\r\nimport Flag from 'react-world-flags';\r\nimport CardCov from '../../components/Card/CardCov';\r\nimport LoadingContainer from '../../components/Loading/loading';\r\n\r\nconst formatNumber = (number) => String(number).replace(/(.)(?=(\\d{3})+$)/g, '$1,');\r\n\r\nconst Main = (props) => {\r\n    //redux\r\n    let dispatch = useDispatch();\r\n    const loading = useSelector((state) => state.cov.loading);\r\n    const data = useSelector((state) => state.cov.data);\r\n    const total = data\r\n        ? {\r\n              totalCase: formatNumber(data[data.length - 1].total_cases),\r\n              deaths: formatNumber(data[data.length - 1].deaths),\r\n              recovered: formatNumber(data[data.length - 1].recovered),\r\n          }\r\n        : {};\r\n\r\n    //state\r\n    const [scroll, setScroll] = useState({\r\n        prevScrollpos: window.pageYOffset,\r\n        visible: true,\r\n    });\r\n\r\n    const [showCase, setShowCase] = useState(false);\r\n    const [showTotal, setShowTotal] = useState(false);\r\n    const [visible, setShowModal] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(actionFetchCov.fetchData());\r\n        window.addEventListener('scroll', handleScroll);\r\n\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n    const handleScroll = () => {\r\n        const { prevScrollpos } = scroll;\r\n\r\n        const currentScrollPos = window.pageYOffset;\r\n        const visible = prevScrollpos > currentScrollPos ? true : false;\r\n\r\n        setScroll({\r\n            prevScrollpos: currentScrollPos,\r\n            visible,\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"main\">\r\n            <header>\r\n                <div style={{ margin: 'auto auto', width: '100%' }} className=\"container\">\r\n                    <Input.Search\r\n                        placeholder=\"Search nation\"\r\n                        onSearch={(value) => console.log(value)}\r\n                        style={{ height: 50 }}\r\n                    />\r\n                </div>\r\n            </header>\r\n            {200 - scroll.prevScrollpos > 0 ? null : (\r\n                // on Show when scroll down => hidden header\r\n                <div className=\"fixedCard\" style={{ top: 0 }}>\r\n                    <div className=\"container\">\r\n                        <CardCov\r\n                            name={'Nation'}\r\n                            changeCase={''}\r\n                            totalCase={'Total Case'}\r\n                            totalDeaths={'Total Deaths'}\r\n                            changeDeaths={''}\r\n                            recovered={'Recovered'}\r\n                            style=\"noneHove\"\r\n                            showCase={showCase}\r\n                            backgroundColor={'#446d67'}\r\n                            getShowCase={() => setShowCase(!showCase)}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n            {loading ? <LoadingContainer /> : null}\r\n            {data && data.length > 0 ? (\r\n                <div className=\"container\">\r\n                    <div className=\"wrapCard\" style={{ marginBottom: showTotal ? 60 : 20 }}>\r\n                        <CardCov\r\n                            name={'Nation'}\r\n                            changeCase={''}\r\n                            totalCase={'Total Case'}\r\n                            totalDeaths={'Total Deaths'}\r\n                            changeDeaths={''}\r\n                            recovered={'Recovered'}\r\n                            style=\"noneHove\"\r\n                            backgroundColor={'#fff'}\r\n                            showCase={showCase}\r\n                            getShowCase={() => setShowCase(!showCase)}\r\n                        />\r\n\r\n                        {data.slice(0, data.length - 1).map((e, i) => (\r\n                            <CardCov\r\n                                key={i}\r\n                                name={e.name}\r\n                                changeCase={formatNumber(e.changeCase)}\r\n                                totalCase={formatNumber(e.totalCase)}\r\n                                totalDeaths={formatNumber(e.totalDeaths)}\r\n                                changeDeaths={formatNumber(e.deaths)}\r\n                                flag={e.flag}\r\n                                recovered={formatNumber(e.recovered)}\r\n                                backgroundColor=\"#fff\"\r\n                                changeRecovered={formatNumber(e.changeRecovered)}\r\n                                showCase={showCase}\r\n                                visible={visible}\r\n                                hiddenModal={() => setShowModal(false)}\r\n                                showModal={() => setShowModal(true)}\r\n                            />\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n            ) : null}\r\n\r\n            <div className=\"fixedCard\" style={{ bottom: 0, backgroundColor: 'transparent' }}>\r\n                <div style={{ backgroundColor: '#F6F7F9', backgroundColor: 'transparent' }}>\r\n                    <button onClick={() => setShowTotal(!showTotal)} style={{ marginLeft: '3vw' }}>\r\n                        {showTotal ? (\r\n                            <ion-icon name=\"chevron-down-outline\" />\r\n                        ) : (\r\n                            <ion-icon name=\"chevron-up-outline\" />\r\n                        )}\r\n                    </button>\r\n                </div>\r\n\r\n                {showTotal ? (\r\n                    <div style={{ backgroundColor: '#446d67' }}>\r\n                        <div className=\"container totalAllCase\">\r\n                            <CardCov\r\n                                name={'Total'}\r\n                                changeCase={''}\r\n                                changeDeaths={''}\r\n                                totalCase={total.totalCase}\r\n                                totalDeaths={total.deaths}\r\n                                recovered={total.recovered}\r\n                                style=\"noneHove\"\r\n                                showCase={showCase}\r\n                                backgroundColor={'#446d67'}\r\n                                hiddenIcon={true}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                ) : null}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nMain.propTypes = {};\r\n\r\nexport default Main;\r\n","import React from 'react';\n\nimport { Route, Switch, HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\n\nimport './App.css';\nimport 'antd/dist/antd.css';\n\nimport Auth from './Pages/Auth';\nimport store from './store/store';\nimport Main from './Pages/Main';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <HashRouter>\n                <div>\n                    <Switch>\n                        <Route path=\"/\" exact component={Auth} />\n                        <Route path=\"/main\" component={Main} />\n                    </Switch>\n                </div>\n            </HashRouter>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}